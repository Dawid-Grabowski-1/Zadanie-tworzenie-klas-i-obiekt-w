class Board:
    def __init__(self):
        self.grid = [[" " for _ in range(3)] for _ in range(3)]

    def display(self):
        print("\n  0   1   2")
        for i, row in enumerate(self.grid):
            print(f"{i} {' | '.join(row)}")
            if i < 2:
                print("  ---------")

    def update(self, row, col, symbol):
        if self.grid[row][col] == " ":
            self.grid[row][col] = symbol
            return True
        return False

    def check_winner(self, symbol):
        # Wiersze i kolumny
        for i in range(3):
            if all(self.grid[i][j] == symbol for j in range(3)) or \
               all(self.grid[j][i] == symbol for j in range(3)):
                return True

        # Przekątne
        if all(self.grid[i][i] == symbol for i in range(3)) or \
           all(self.grid[i][2 - i] == symbol for i in range(3)):
            return True

        return False

    def is_full(self):
        return all(cell != " " for row in self.grid for cell in row)


class Player:
    def __init__(self, name, symbol):
        self.name = name
        self.symbol = symbol


class Game:
    def __init__(self):
        self.board = Board()
        self.player1 = Player("Gracz 1", "X")
        self.player2 = Player("Gracz 2", "O")
        self.current_player = self.player1

    def switch_turn(self):
        self.current_player = self.player1 if self.current_player == self.player2 else self.player2

    def play(self):
        print("=== Gra Kółko-Krzyżyk ===")
        while True:
            self.board.display()
            print(f"\n{self.current_player.name} ({self.current_player.symbol}), twój ruch.")
            try:
                row = int(input("Podaj wiersz (0-2): "))
                col = int(input("Podaj kolumnę (0-2): "))
            except ValueError:
                print("⚠️ Błędny input! Podaj liczby.")
                continue

            if 0 <= row < 3 and 0 <= col < 3:
                if self.board.update(row, col, self.current_player.symbol):
                    if self.board.check_winner(self.current_player.symbol):
                        self.board.display()
                        print(f"\n🎉 {self.current_player.name} wygrywa!")
                        break
                    elif self.board.is_full():
                        self.board.display()
                        print("\n🤝 Remis!")
                        break
                    else:
                        self.switch_turn()
                else:
                    print("⚠️ To pole jest już zajęte!")
            else:
                print("⚠️ Nieprawidłowe współrzędne. Spróbuj ponownie.")


# Uruchomienie gry
if __name__ == "__main__":
    gra = Game()
    gra.play()
