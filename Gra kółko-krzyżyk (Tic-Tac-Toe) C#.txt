using System;

namespace TicTacToe
{
    // Klasa reprezentująca planszę
    class Board
    {
        private char[,] grid = new char[3, 3];

        public Board()
        {
            // Wypełnij planszę pustymi polami
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                    grid[i, j] = ' ';
        }

        public void Display()
        {
            Console.Clear();
            Console.WriteLine("  0   1   2");
            for (int i = 0; i < 3; i++)
            {
                Console.Write(i + " ");
                for (int j = 0; j < 3; j++)
                {
                    Console.Write(grid[i, j]);
                    if (j < 2)
                        Console.Write(" | ");
                }
                Console.WriteLine();
                if (i < 2)
                    Console.WriteLine("  ---------");
            }
        }

        public bool MakeMove(int row, int col, char symbol)
        {
            if (row < 0 || row > 2 || col < 0 || col > 2 || grid[row, col] != ' ')
                return false;

            grid[row, col] = symbol;
            return true;
        }

        public bool CheckWin(char symbol)
        {
            for (int i = 0; i < 3; i++)
            {
                if ((grid[i, 0] == symbol && grid[i, 1] == symbol && grid[i, 2] == symbol) || // wiersz
                    (grid[0, i] == symbol && grid[1, i] == symbol && grid[2, i] == symbol))   // kolumna
                    return true;
            }

            // Przekątne
            if ((grid[0, 0] == symbol && grid[1, 1] == symbol && grid[2, 2] == symbol) ||
                (grid[0, 2] == symbol && grid[1, 1] == symbol && grid[2, 0] == symbol))
                return true;

            return false;
        }

        public bool IsFull()
        {
            foreach (char c in grid)
                if (c == ' ')
                    return false;
            return true;
        }
    }

    // Klasa gracza
    class Player
    {
        public string Name { get; }
        public char Symbol { get; }

        public Player(string name, char symbol)
        {
            Name = name;
            Symbol = symbol;
        }
    }

    // Klasa głównej gry
    class Game
    {
        private Board board;
        private Player player1;
        private Player player2;

        public void Start()
        {
            Console.Write("Podaj nazwę Gracza 1 (X): ");
            string name1 = Console.ReadLine();
            Console.Write("Podaj nazwę Gracza 2 (O): ");
            string name2 = Console.ReadLine();

            player1 = new Player(name1, 'X');
            player2 = new Player(name2, 'O');
            board = new Board();

            Player currentPlayer = player1;

            while (true)
            {
                board.Display();
                Console.WriteLine($"{currentPlayer.Name} ({currentPlayer.Symbol}), twój ruch!");

                int row, col;

                while (true)
                {
                    Console.Write("Podaj wiersz (0-2): ");
                    if (!int.TryParse(Console.ReadLine(), out row))
                        continue;
                    Console.Write("Podaj kolumnę (0-2): ");
                    if (!int.TryParse(Console.ReadLine(), out col))
                        continue;

                    if (board.MakeMove(row, col, currentPlayer.Symbol))
                        break;
                    else
                        Console.WriteLine("Nieprawidłowy ruch, spróbuj ponownie.");
                }

                if (board.CheckWin(currentPlayer.Symbol))
                {
                    board.Display();
                    Console.WriteLine($"🎉 {currentPlayer.Name} WYGRYWA! 🎉");
                    break;
                }

                if (board.IsFull())
                {
                    board.Display();
                    Console.WriteLine("😬 REMIS!");
                    break;
                }

                // Zmiana gracza
                currentPlayer = currentPlayer == player1 ? player2 : player1;
            }
        }
    }

    // Główna funkcja programu
    class Program
    {
        static void Main(string[] args)
        {
            Game game = new Game();
            game.Start();
        }
    }
}
